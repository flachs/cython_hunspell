language: python
matrix:
  include:
  - os: linux
    python: 3.6
    env:
    - CIBW_BUILD: cp36-*
    - CIBW_BUILD_VERBOSITY: 3
  - os: linux
    python: 3.7
    env:
    - CIBW_BUILD: cp37-*
    - CIBW_BUILD_VERBOSITY: 3
  - os: linux
    python: 3.8
    env:
    - CIBW_BUILD: cp38-*
    - CIBW_BUILD_VERBOSITY: 3
  - os: linux
    python: 3.9
    env:
    - CIBW_BUILD: cp39-*
    - CIBW_BUILD_VERBOSITY: 3
  - os: linux
    python: 3.10
    env:
    - CIBW_BUILD: cp310-*
    - CIBW_BUILD_VERBOSITY: 3
  - os: osx
    language: shell
    env:
    - PYENV_VERSION: 3.6-dev
    - CIBW_BUILD: cp36-*
    - CIBW_BUILD_VERBOSITY: 3
    - HOMEBREW_NO_INSTALL_CLEANUP: 1
    - HOMEBREW_NO_AUTO_UPDATE: 1
  - os: osx
    language: shell
    env:
    - PYENV_VERSION: 3.7-dev
    - CIBW_BUILD: cp37-*
    - CIBW_BUILD_VERBOSITY: 3
    - HOMEBREW_NO_INSTALL_CLEANUP: 1
    - HOMEBREW_NO_AUTO_UPDATE: 1
  - os: osx
    language: shell
    env:
    - PYENV_VERSION: 3.8-dev
    - CIBW_BUILD: cp38-*
    - CIBW_BUILD_VERBOSITY: 3
    - HOMEBREW_NO_INSTALL_CLEANUP: 1
    - HOMEBREW_NO_AUTO_UPDATE: 1
  - os: osx
    language: shell
    osx_image: xcode12.2
    env:
    - PYENV_VERSION: 3.9-dev
    - CIBW_BUILD: cp39-*
    - CIBW_BUILD_VERBOSITY: 3
    - HOMEBREW_NO_INSTALL_CLEANUP: 1
    - HOMEBREW_NO_AUTO_UPDATE: 1
  - os: osx
    language: shell
    env:
    - PYENV_VERSION: 3.10-dev
    - CIBW_BUILD: cp310-*
    - CIBW_BUILD_VERBOSITY: 3
    - HOMEBREW_NO_INSTALL_CLEANUP: 1
    - HOMEBREW_NO_AUTO_UPDATE: 1
  - os: windows
    language: shell
    env:
    - PYENV_VERSION: 3.6.8
    - PYENV_PATH: "/c/Python36"
    - CIBW_BUILD: cp36-*
    - CIBW_BUILD_VERBOSITY: 3
    - MSBUILD_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\MSBuild\Current\Bin
  - os: windows
    language: shell
    env:
    - PYENV_VERSION: 3.7.8
    - PYENV_PATH: "/c/Python37"
    - CIBW_BUILD: cp37-*
    - CIBW_BUILD_VERBOSITY: 3
    - MSBUILD_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\MSBuild\Current\Bin
  - os: windows
    language: shell
    env:
    - PYENV_VERSION: 3.8.5
    - PYENV_PATH: "/c/Python38"
    - CIBW_BUILD: cp38-*
    - CIBW_BUILD_VERBOSITY: 3
    - MSBUILD_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\MSBuild\Current\Bin
  - os: windows
    language: shell
    env:
    - PYENV_VERSION: 3.9.0
    - PYENV_PATH: "/c/Python39"
    - CIBW_BUILD: cp39-*
    - CIBW_BUILD_VERBOSITY: 3
    - MSBUILD_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\MSBuild\Current\Bin
  - os: windows
    language: shell
    env:
    - PYENV_VERSION: 3.10.0
    - PYENV_PATH: "/c/Python310"
    - CIBW_BUILD: cp310-*
    - CIBW_BUILD_VERBOSITY: 3
    - MSBUILD_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\MSBuild\Current\Bin
before_install:
- |-
  case $TRAVIS_OS_NAME in
    linux)
      sudo apt install -y autoconf automake autopoint libtool
      pip install -U pip
      python --version
      ;;
    osx)
      brew install autoconf automake libtool gettext
      brew link gettext --force
      eval "$(pyenv init -)"
      pyenv install --list
      pyenv install $PYENV_VERSION
      pyenv global $PYENV_VERSION
      pyenv rehash
      pip install -U pip
      python --version
      ;;
    windows)
      choco install visualstudio2019buildtools --package-parameters "--add Microsoft.VisualStudio.Component.VC.Tools.x86.x64"
      choco install python --version $PYENV_VERSION
      export PATH="$PYENV_PATH:$PYENV_PATH/Scripts:$MSBUILD_PATH:$PATH"
      python -m ensurepip
      pip install -U pip
      python --version
      ;;
  esac
install:
- pip install -r requirements.txt
- pip install -r requirements-dev.txt
- pip install -r requirements-test.txt
- pip install cibuildwheel
- touch .cibuildwheel
- python setup.py build
- CYHUNSPELL_FORCE_BUILD=0 pip install .
- rm -rf build
- rm -rf external/build
script:
- python -m pytest -vv
- rm hunspell/*.so || true
- rm hunspell/*.dylib || true
- rm hunspell/*.pyd || true
- python -m cibuildwheel --output-dir wheelhouse
- ls wheelhouse
# Print wheel contents
- for i in wheelhouse/*.whl; do echo "Listing file inside $i"; python -m zipfile -l $i; done
- if [ "${TRAVIS_TAG:-}" != "" ]; then python -m twine upload --skip-existing wheelhouse/*;
  fi
notifications:
  email:
    recipients:
    - mseal007@gmail.com
    on_success: change
    on_failure: always
env:
  global:
  - TWINE_USERNAME: __token__
  - CYHUNSPELL_FORCE_BUILD: 1
  - CIBW_ENVIRONMENT: CYHUNSPELL_FORCE_BUILD=1
  - CIBW_DEPENDENCY_VERSIONS: latest
